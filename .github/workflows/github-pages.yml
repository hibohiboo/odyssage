name: Deploy Documents to Pages
# https://docs.github.com/ja/pages/getting-started-with-github-pages/using-custom-workflows-with-github-pages

on:
  push:
    branches:
      - develop
      - docs
      - id/55/addGithubActionsDBDoc
    paths:
      - .github/workflows/**
      - docs/** # documentsフォルダ内が更新されたときに実施
      - tests/**
      - src/**/tests/**
      - stories/**
  workflow_dispatch:
    
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: 'pages'
  cancel-in-progress: false
env:
  BUILD_PATH: './docs/astro' # default value when not using subfolders
  # BUILD_PATH: subfolder
# https://zenn.dev/a_da_chi/articles/76f499fd15894a
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    # dbdoc生成のためにPostgreSQLのコンテナを立ち上げる
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: main
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # 後述のcode-maatでgit logを取得するために必要
          # https://qiita.com/h_tyokinuhata/items/bd5488264f0e6aa41c89
          # リポジトリをクローンする
          # コミット履歴をどこまで遡って参照できるかの設定
          # デフォルトでは 1 に設定されており、最新のコミット履歴しか参照できない
          # 0 に変更することで、リポジトリの完全なコミット履歴を参照できるようになる
          # ただし、コミット履歴が大きくなるとクローンに時間がかかるため、ボトルネックになる場合は適切な値を設定する
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install document dependencies
        run: bun install
        working-directory: ${{ env.BUILD_PATH }}

      # ドキュメント作成用の依存関係をインストール
      - name: Install monorepo dependencies
        run: bun install --ignore-scripts

      # マイグレーションを実行
      - name: Migration
        run: bun run migrate:ci
        working-directory: ./packages/database

      # dbdoc作成
      - name: Build dbdoc with Schemaspy
        run: docker compose up
        working-directory: ./docs/dbdoc

      # # core ふるまい駆動テスト
      # - name: Core Test Report Cucumber
      #   run: bun run test-report
      #   working-directory: ./packages/core
      
      # OpenAPI ドキュメント作成
      - name: Build with OpenAPI
        run: bun install && bun run build
        working-directory: ./docs/redocly

        # build storybook
      - name: Build Storybook
        run: bun install && bun run build-storybook
        working-directory: ./packages/ui

        # ドキュメント作成
      - name: Build with Astro
        run: |
          npm run astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}

      # eslint ドキュメント作成
      - name: Build with eslint-inspect
        run: bun run build-inspect
        working-directory: ./packages/eslint-config-custom
      
      # hotspot ドキュメント作成
      - name: Set up JDK 21
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download Code Maat
        run: wget https://github.com/adamtornhill/code-maat/releases/download/v1.0.4/code-maat-1.0.4-standalone.jar
        working-directory: ./docs/code-maat

      - name: create git log 
        run: git log --all --numstat --date=short --pretty=format:'--%h--%ad--%aN' --no-renames --after=2024-01-01 > ./logfile.log
        working-directory: ./docs/code-maat

      - name: Run Code Maat
        run: java -jar code-maat-1.0.4-standalone.jar -l logfile.log -c git2 -a revisions > ./revisions.csv
        working-directory: ./docs/code-maat

      - name: Run Cloc
        run: docker run --rm -v .:/tmp aldanial/cloc --unix --by-file --csv --quiet --timeout 20 --vcs=git --exclude-dir=docs,.vscode,.github --not-match-f=\.json --report-file=./docs/code-maat/complexity.csv

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - run: python csv_as_enclosure_json.py --structure complexity.csv --weights revisions.csv > ../astro/dist/crime-scene-hotspots/hotspots.json
        working-directory: ./docs/code-maat

      - run: cp ./logfile.log ../astro/dist/crime-scene-hotspots/logfile.log && cp ./complexity.csv ../astro/dist/crime-scene-hotspots/complexity.csv && cp ./revisions.csv ../astro/dist/crime-scene-hotspots/revisions.csv
        working-directory: ./docs/code-maat


      # astro ドキュメントアップロード
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
